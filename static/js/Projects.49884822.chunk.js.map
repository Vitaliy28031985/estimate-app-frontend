{"version":3,"file":"static/js/Projects.49884822.chunk.js","mappings":"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","sources":["webpack://estimate-app-frontend/./src/components/AddProject/AddProject.module.scss?2750","components/AddProject/AddProject.jsx","webpack://estimate-app-frontend/./src/components/UpdateProject/UpdateProject.module.scss?be75","components/UpdateProject/UpdateProject.jsx","webpack://estimate-app-frontend/./src/components/ProjectsList/ProjectsList.module.scss?eaf5","components/ProjectsList/ProjectsList.jsx","Pages/Projects/Projects.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddProject_container__aitOZ\",\"closeButton\":\"AddProject_closeButton__kHXh-\",\"label\":\"AddProject_label__+XmHS\",\"input\":\"AddProject_input__sSFNV\",\"button\":\"AddProject_button__jHsN2\"};","import { useState } from 'react';\nimport Close from '../Icons/Close/Close';\nimport {useAddProjectsMutation, useGetProjectsQuery} from \"../../redux/projectSlice/projectSlice\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from \"./AddProject.module.scss\";\n\nfunction AddProject({isShowModal}) {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n \n    const {data} = useGetProjectsQuery();\n    const [addProjects] = useAddProjectsMutation();\n\n    const handleChange = e => {\n        const {name, value,} = e.currentTarget;\n        switch (name) {\n          \n           case 'title':\n            setTitle(value);\n            break;\n             case 'description':\n            setDescription(value);\n            break;\n                  \n           default:\n           return;  \n        }\n     }\n\n\n     const handleSubmit = async e => {\n        e.preventDefault();\n\n        if( title === '' || description === '') {\n            toast(\"Заповніть усі поля\");\n            return\n        }\n\n        if (data.find(data => data.title === title)) {\n            toast(\"Таке найменування роботи вже існує\");\n            setTitle('')\n            setDescription('')\n            return;\n        }\n        \n        try {\n    const newProject = {title, description}\n         addProjects(newProject);\n           \n            \n          } catch (error) {\n            alert(`User with the title: ${title} does not exist!`, error);\n          }\n    setTitle('')\n    setDescription('')\n   isShowModal()\n    }\n\nreturn(\n    <div className={s.container}>\n    <ToastContainer draggable={true} />\n    <button className={s.closeButton} type=\"button\" onClick={isShowModal}>\n       <Close width={\"24\"} height={\"24\"}/>\n    </button>\n    <form action=\"\" onSubmit={handleSubmit}>\n       <div>\n            <p className={s.label}>Найменування</p>\n            <input type=\"text\" name=\"title\"\n            className={s.input}\n            onChange={handleChange}\n            value={title}\n            />\n        </div>\n        <div>\n            <p className={s.label}>Адреса об'єкту</p>\n            <input type=\"text\" name=\"description\"\n            className={s.input}\n            onChange={handleChange}\n            value={description}\n            />\n        </div>\n        <button className={s.button}>Додати кошторис</button>\n       </form>\n    </div>\n)\n}\nexport default AddProject;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UpdateProject_container__UfNXt\",\"closeButton\":\"UpdateProject_closeButton__vuxTh\",\"label\":\"UpdateProject_label__1pmpV\",\"input\":\"UpdateProject_input__Qxt6m\",\"button\":\"UpdateProject_button__M9H3i\"};","\n\nimport { useState } from 'react';\nimport Close from '../Icons/Close/Close';\nimport {useUpdateProjectMutation} from \"../../redux/projectSlice/projectSlice\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from \"./UpdateProject.module.scss\";\n\nfunction UpdateProject({isShowModal, getDataProject}) {\n    const [title, setTitle] = useState(getDataProject.nawTitle);\n    const [description, setDescription] = useState(getDataProject.nawDescription);\n    const[mutate] = useUpdateProjectMutation()\n    \n  \n\n    const handleChange = e => {\n        const {name, value,} = e.currentTarget;\n        switch (name) {\n          \n           case 'title':\n            setTitle(value);\n            break;\n             case 'description':\n            setDescription(value);\n            break;\n                  \n           default:\n           return;  \n        }\n     }\n\n\n     const handleSubmit = async e => {\n        e.preventDefault();\n\n        if( title === '' || description === '') {\n            toast(\"Заповніть усі поля\");\n            return\n        }\n\n       \n        \n        try {\n    const newProject = {title, description}\n    await mutate({id: getDataProject.nawId, newData: newProject});\n           \n            \n          } catch (error) {\n            alert(`User with the title: ${title} does not exist!`, error);\n          }\n    setTitle('')\n    setDescription('')\n   isShowModal()\n    }\n\nreturn(\n    <div className={s.container}>\n    <ToastContainer draggable={true} />\n    <button className={s.closeButton} type=\"button\" onClick={isShowModal}>\n       <Close width={\"24\"} height={\"24\"}/>\n    </button>\n    <form action=\"\" onSubmit={handleSubmit}>\n       <div>\n            <p className={s.label}>Найменування</p>\n            <input type=\"text\" name=\"title\"\n            className={s.input}\n            onChange={handleChange}\n            value={title}\n            />\n        </div>\n        <div>\n            <p className={s.label}>Адреса об'єкту</p>\n            <input type=\"text\" name=\"description\"\n            className={s.input}\n            onChange={handleChange}\n            value={description}\n            />\n        </div>\n        <button className={s.button}>Обновити кошторис</button>\n       </form>\n    </div>\n)\n}\nexport default UpdateProject;","// extracted by mini-css-extract-plugin\nexport default {\"projectContainer\":\"ProjectsList_projectContainer__kPumC\",\"projectItem\":\"ProjectsList_projectItem__HgjHs\",\"projectTitle\":\"ProjectsList_projectTitle__VjbEi\",\"titleContainer\":\"ProjectsList_titleContainer__3iTJ0\",\"projectDescription\":\"ProjectsList_projectDescription__9Qxys\",\"projectPrice\":\"ProjectsList_projectPrice__TzLIj\",\"projectLink\":\"ProjectsList_projectLink__FT2f0\",\"buttonContainer\":\"ProjectsList_buttonContainer__VeVks\",\"addButton\":\"ProjectsList_addButton__ci2Au\",\"buttonDelete\":\"ProjectsList_buttonDelete__OWmCv\"};","import { useState, useEffect } from 'react';\nimport { NavLink} from 'react-router-dom';\nimport { useGetProjectsQuery, useDeleteProjectMutation } from '../../redux/projectSlice/projectSlice';\nimport {useCurrentQuery} from \"../../redux/auth/authApi\";\nimport Add from '../Icons/Add/Add';\nimport AddProject from \"../AddProject/AddProject\";\nimport UpdateProject from \"../UpdateProject/UpdateProject\";\nimport Modal from '../Modal/Modal';\nimport s from \"./ProjectsList.module.scss\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport updates from \"../../images/update-12-16.png\";\n\n\nfunction ProjectsList() {\n  \n\nconst [showProject, setShowProject] = useState(false)\nconst [showUpdateModal, setShowUpdateModal] = useState(false); \nconst [newData, setNewData] = useState(null);\nconst {data} = useGetProjectsQuery();\nconst [deleteProject] = useDeleteProjectMutation();\nconst [userRole, setUserRole] = useState(false);\n\nlet nawId = '';\nlet nawTitle = '';\nlet nawDescription = '';\n\nconst { data: userData } = useCurrentQuery(); \n\n\nuseEffect(() => {\n  if (userData) {\n    const role = userData?.user?.role;\n    const isUserRole = role !== \"customer\";\n       setUserRole(isUserRole);\n  }\n}, [userData, userRole]);\n\n\n\nconst handleToggleProject = () => {\n  setShowProject(showProject => !showProject);\n}\n\nconst handleToggleUpdateModal = () => {\n  setShowUpdateModal(showUpdateModal => !showUpdateModal);\n}\n\nconst onDeleteProject = id => {\n  deleteProject(id);\n  toast(\"Кошторис видалено\");\n};\n\nconst updateProject = async (id, title, description) => {\n nawId = await id;\n nawTitle = await title;\n nawDescription = await description;\n\n await setNewData({nawId, nawTitle, nawDescription})\n\n handleToggleUpdateModal();\n\n} \n\n    return (\n      <div >\n        <ToastContainer draggable={true} />\n        <div className={s.titleContainer}>\n     <h1>Кошториси об'єктів</h1>\n     {userRole && (\n      <button onClick={handleToggleProject} className={s.addButton}><Add width={\"24\"} height={\"24\"}/></button>\n     )}\n        \n     \n     </div>\n   <ul className={s.projectContainer}>\n    {data && data.map(({_id, title, description, total}) => (\n         <li className={s.projectItem} key={_id} id={_id}>\n          {userRole && (\n            <button className={s.buttonDelete} onClick={() => updateProject(_id, title, description)}>\n          <img src={updates} width='20' height='20' alt='update'/> \n          </button> \n          )}\n         \n        <h2 className={s.projectTitle}>{title}</h2>\n        <p className={s.projectDescription}>{description}</p>\n        <p className={s.projectPrice}>Загальна сума кошторису: {total} грн.</p>\n        <div className={s.buttonContainer}>\n        <NavLink className={s.projectLink} to={`/projects/${_id}`}>Детальніше</NavLink>\n        {userRole && (\n         <button className={s.projectLink} onClick={() => onDeleteProject(_id)}>Видалити</button> \n        )}\n        \n        </div>\n    </li> \n    ))}\n  \n \n   </ul>\n   {showProject && ( <Modal><AddProject isShowModal={handleToggleProject}/></Modal>)}\n   {showUpdateModal && ( <Modal><UpdateProject isShowModal={handleToggleUpdateModal} getDataProject={newData}/></Modal>)}\n     </div>\n    );\n  }\n  \n  export default ProjectsList;","import ProjectsList from \"../../components/ProjectsList/ProjectsList\";\nfunction Projects() {\n \n    return (\n      <div>\n     <ProjectsList/>\n    \n     \n     </div>\n    );\n  }\n  \n  export default Projects;"],"names":["_ref","isShowModal","title","setTitle","useState","description","setDescription","data","useGetProjectsQuery","addProjects","useAddProjectsMutation","handleChange","e","name","value","currentTarget","_jsxs","className","s","children","_jsx","ToastContainer","draggable","type","onClick","Close","width","height","action","onSubmit","async","preventDefault","find","toast","error","alert","concat","onChange","getDataProject","nawTitle","nawDescription","mutate","useUpdateProjectMutation","newProject","id","nawId","newData","showProject","setShowProject","showUpdateModal","setShowUpdateModal","setNewData","deleteProject","useDeleteProjectMutation","userRole","setUserRole","userData","useCurrentQuery","useEffect","_userData$user","role","user","handleToggleProject","handleToggleUpdateModal","Add","map","_id","total","updateProject","src","alt","NavLink","to","Modal","AddProject","UpdateProject","ProjectsList"],"sourceRoot":""}